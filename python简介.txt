1、Python是一种面向对象、解释性、动态数据的高级编程语言
	Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。

	Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。

	Python 是交互式语言： 这意味着，您可以在一个Python提示符，直接互动执行写你的程序。

	Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。

	Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，
	它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。
2、Python 源代码同样遵循 GPL(GNU General Public License)协议。
3、集成开发工具：Pycharm("paich'm");
	相关配置：
	Pycharm 编码语言设置步骤：
		进入 file > Settings，在输入框搜索 encoding。
		找到 Editor > File encodings，将 IDE Encoding 和 Project Encoding 设置为utf-8。
4、基础
  Python 标识符
	在 Python 里，标识符由字母、数字、下划线组成。

	在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。

	Python 中的标识符是区分大小写的。

	以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；

	以双下划线开头的 __foo 代表类的私有成员；以双下划线开头和结尾的 __foo__ 代表 Python 里特殊方法专用的标识，如 __init__() 代表类的构造函数。

	Python 可以同一行显示多条语句，方法是用分号 ; 分开，如：

	>>> print 'hello';print 'runoob';
	hello
	runoob
5.变量赋值
	Python 中的变量赋值不需要类型声明。

	每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。

	每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。

	等号（=）用来给变量赋值。
6.标准数据类型
	在内存中存储的数据可以有多种类型。

	例如，一个人的年龄可以用数字来存储，他的名字可以用字符来存储。

	Python 定义了一些标准类型，用于存储各种类型的数据。

	Python有五个标准的数据类型：
		Numbers（数字）
		String（字符串）
		List（列表）
		Tuple（元组）
		Dictionary（字典）
	Python支持四种不同的数字类型：
		int（有符号整型）
		long（长整型[也可以代表八进制和十六进制]）
		float（浮点型）
		complex（复数）
7、特有的运算符
	a**b = a的幂次方
	a//b取商的整数；